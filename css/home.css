@charset "UTF-8";

html {
  font-size: 100%;
}
body {
  color: #121212;
  font-family: 'Noto Sans JP', sans-serif;
}
a {
  color: #121212;
  text-decoration: none;
}
img {
  max-width: 100%;
  vertical-align: bottom;
}
li {
  list-style: none;
}

/* サイドメニューの横幅分だけ左にmarginをとる */
.container {
  margin-left: 300px;
}
/* コンテンツ幅を設定するための共通クラス */
.wrapper {
  max-width: 900px;
  padding: 80px 20px;
  margin: 0 auto;
}
.site-title {
  width: 70%;
  line-height: 1px;
  margin-bottom: 10%;
}
.site-title a {
  display: block;
}
/*
セクションタイトル用の共通クラス
両サイドの線は疑似要素で作成して、Flexboxで横並びに配置
※beforeが左の線、afterが右の線
*/
.sec-title {
  display: flex;
  align-items: center;
  justify-content: space-between;
  font-size: 1.75rem;
  margin-bottom: 60px;
  text-align: center;
}
.sec-title::before,
.sec-title::after {
  border-top: 1px solid;
  content: "";
  width: 28%;
}

/*-------------------------------------------
ヘッダー
-------------------------------------------*/
/*
サイドのロゴとグローバルナビゲーションは「header」タグで囲む
※サイドに配置しているが、ロゴとグローバルナビゲーションを含んだヘッダー要素のため、
「aside」タグではなく「header」タグを使用します。
「aside」タグは、メインコンテンツとは直接関係ない補足的な情報をサイドバーとして配置する場合に使用します。
例えば、Codejump内の「中級編：ブログサイト」のような使い方です。

中級編：ブログサイト　デモ
https://code-jump.com/demo/html/blog/
*/
#header {
  width: 300px;
  height: 100%;
  background-color: #fff;
  padding: 40px 50px 30px 45px;
  position: fixed;
  top: 0;
  /* 画面の高さが低くてメニューが隠れてしまった場合に、縦スクロールが出るよう設定 */
  overflow-y: auto;
}
#header .nav-menu {
  margin-bottom: 60px;
}
#header li {
  font-size: 0.875rem;
  padding: 8px 0;
}

/*-------------------------------------------
Video
-------------------------------------------*/
/*
動画を全画面表示
*/
#video {
  width: 100%;
  height: 100vh;
  position: relative;
}
/*
「position: fixed;」で動画を固定し、「top: -220px;」で表示位置を調整
z-indexでマイナスを設定して、他のコンテンツの下に隠れるようにする
*/
#video .bg-video {
  position: fixed;
  top: -0px;
  width: 100%;
  z-index: -10;
}
.message {
  margin: 0 auto;
  margin-top: 40%;
  text-align: center;
  font-weight: bold;
  line-height: 100%;
  color: #DBEEFF;
  font-size: 100%;
}

/* スクロール */
@import url(https://fonts.googleapis.com/css?family=Cabin);

.mouse{
  top: 10%;
  margin: 0 auto;
  width: 52px;
  height: 88px;
  position: relative;
  background: rgba(86, 86, 86, 0.5) linear-gradient(transparent 0%,
                                      transparent 50%,
                                      rgba(255, 255, 255, 0.5) 50%,
                                      rgba(255, 255, 255, 0.5) 100%);
  background-size: 100% 200%;
  border-radius: 100px;
  animation: colorSlide 10s linear infinite,
             nudgeMouse 10s ease-out infinite;
}
.mouse:before,
.mouse:after{
  content: '';
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  margin: auto;
}
.mouse:before{
  width: 46px;
  height: 82px;
  background-color: rgba(255, 255, 255, 0.5);
  border-radius: 100px;
}
.mouse:after{
  background-color: rgba(86, 86, 86, 0.5);
  width: 10px;
  height: 10px;
  border-radius: 100%;
  animation: trackBallSlide 10s linear infinite;
}
.scroll-text{
  text-align: center;
  margin: 0 auto;
  margin-top: 7%;
  font-family: Cabin;
  font-size: 20px;
  font-weight: bold;
  letter-spacing: 15px;
  color: #fff;
  text-indent: 10px;
  animation: colorText 10s ease-out infinite,
             nudgeText 10s ease-out infinite;
}

/* Animations */
@keyframes colorSlide{
  0% {
    background-position: 0% 100%;
  }
  20% {
    background-position: 0% 0%;
  }
  21% {
    background-color: rgba(86, 86, 86, 0.5);
  }
  29.99% {
    background-color: rgba(255, 255, 255, 0.5);
    background-position: 0% 0%;
  }
  30% {
    background-color:rgba(86, 86, 86, 0.5);
    background-position: 0% 100%;
  }
  50% {
    background-position: 0% 0%;
  }
  51% {
    background-color: rgba(86, 86, 86, 0.5);
  }
  59% {
    background-color: rgba(255, 255, 255, 0.5);
    background-position: 0% 0%;
  }
  60% {
    background-color: rgba(86, 86, 86, 0.5);
    background-position: 0% 100%;
  }
  80% {
    background-position: 0% 0%;
  }
  81% {
    background-color: rgba(86, 86, 86, 0.5);
  }
  90%, 100% {
    background-color: rgba(255, 255, 255, 0.5)f;
  }
}

@keyframes colorText{
  21% {
    color: #4e5559;
  }
  30% {
    color: #ffffff;
  }
  51% {
    color: #4e5559;
  }
  60% {
    color: #ffffff;
  }
  81% {
    color: #4e5559;
  }
  90% {
    color: #ffffff;
  }
} 

@keyframes trackBallSlide{
  0%{
    opacity: 1;
    transform: scale(1) translateY(-20px);
  }
  6%{
    opacity: 1;
    transform: scale(0.9) translateY(5px);
  }
  14%{
    opacity: 0;
    transform: scale(0.4) translateY(40px);
  }
  15%, 19%{
    opacity: 0;
    transform: scale(0.4) translateY(-20px);
  }
  28%, 29.99%{
    opacity: 1;
    transform: scale(1) translateY(-20px);
  }
  30%{
    opacity: 1;
    transform: scale(1) translateY(-20px);
  }
  36%{
    opacity: 1;
    transform: scale(0.9) translateY(5px);
  }
  44%{
    opacity: 0;
    transform: scale(0.4) translateY(40px);
  }
  45%, 49%{
    opacity: 0;
    transform: scale(0.4) translateY(-20px);
  }
  58%, 59.99%{
    opacity: 1;
    transform: scale(1) translateY(-20px);
  }
  60%{
    opacity: 1;
    transform: scale(0.9) translateY(-20px);
  }
  66%{
    opacity: 1;
    transform: scale(0.9) translateY(5px);
  }
  74%{
    opacity: 0;
    transform: scale(0.4) translateY(40px);
  }
  75%, 79%{
    opacity: 0;
    transform: scale(0.4) translateY(-20px);
  }
  88%, 100%{
    opacity: 1;
    transform: scale(1) translateY(-20px);
  }
}
@keyframes nudgeMouse{
  0%{
    transform: translateY(0);
  }
  20%{
    transform: translateY(8px);
  }
  30%{
    transform: translateY(0);
  }
  50%{
    transform: translateY(8px);
  }
  60%{
    transform: translateY(0);
  }
  80%{
    transform: translateY(8px);
  }
  90%{
    transform: translateY(0);
  }
}
@keyframes nudgeText {
  0%{
    transform: translateY(0);
  }
  20%{
    transform: translateY(2px);
  }
  30%{
    transform: translateY(0);
  }
  50%{
    transform: translateY(2px);
  }
  60%{
    transform: translateY(0);
  }
  80%{
    transform: translateY(2px);
  }
  90%{
    transform: translateY(0);
  }
}



/*-------------------------------------------
blog
-------------------------------------------*/
/* 背景に黒の透過グラデーションを設定 */
#blog {
  background: linear-gradient(rgba(0,0,0,0),rgba(0,0,0,0.8));
  color: #fff;
}
#blog .list {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
}
#blog .list li {
  width: 47%;
  border: solid 1px #fff;
  margin-bottom: 50px;
  position: relative;
}
/* 下段の2つはマージンを設定しない */
#blog .list li:last-child,
#blog .list li:nth-last-child(2) {
  margin-bottom: 0;
}
#blog .list li a {
  display: block;
}
/* 疑似要素を使用して、テキストの下に「box-shadow」で影を付ける */
#blog .list li a::after {
  content: "";
  box-shadow: 0 -30px 15px -1px #2e2e2e inset;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}
#blog .list .name {
  color: #fff;
  font-size: 0.75rem;
  position: absolute;
  bottom: 4px;
  left: 7px;
  z-index: 5;
}

/*-------------------------------------------
work
-------------------------------------------*/
/* 背景に黒の透過を設定 */
#work {
  background: rgba(0, 0, 0, 0.8);
  color: #fff;
  padding-bottom: 80px;
}
#work .list {
  display: flex;
  justify-content: space-between;
}
#work .list li {
  width: 30%;
  font-size: 0.875rem;
  text-align: center;
}
/*
円を作成

レスポンシブに対応した可変サイズの円を作成する場合は、
widthに100%を設定して、paddingで上下を50%に設定
今回は円の中にテキストが入っているのと、枠線をつけているため、
50%から上下それぞれテキストの高さ（10px）とボーダー（1px）をマイナスしている
※テキストの高さは、ディベロッパーツールで20pxと確認できるため、
上下で分割してそれぞれ10pxとなる。

*/
#work .list li a {
  width: 100%;
  height: auto;
  border: solid 1px #fff;
  border-radius: 50%;
  color: #fff;
  display: block;
  margin-bottom: 15px;
  text-align: center;
  position: relative;
  /* ホバー時用の要素を隠すために設定 */
  overflow: hidden;
}
/*
ホバー時のスライドを疑似要素で作成
「left: -100%;」で左側に隠しておく
*/
#work .list li a::before {
  content: "";
  width: 100%;
  height: 100%;
  background-color: #fff;
  position: absolute;
  top: 0;
  left: -100%;
  opacity: 0.3;
  transition: 0.5s;
}
/* ホバー時に「left: 0;」を設定して右に移動させる */
#work .list li a:hover::before {
  left: 0;
}
#work .list .title {
  font-size: 1rem;
  font-weight: bold;
  margin-bottom: 5px;
}

/*-------------------------------------------
Profile
-------------------------------------------*/
#profile {
  background-color: #fff;
  padding-top: 40px;
}

/*-------------------------------------------
Contact
-------------------------------------------*/
#contact {
  background-color: #fff;
  padding-bottom: 80px;
}
#contact .link {
  display: flex;
  justify-content: space-between;
  margin-top: 60px;
}
#contact .link .item {
  width: 30%;
  border: solid 1px #121212;
  display: block;
  font-size: 0.875rem;
  position: relative;
  padding: 50px 0;
  text-align: center;
  transition: 0.1s;
}
#contact .link .item::before {
  content: "";
  border-top: 20px solid transparent;
  border-right: 20px solid #121212;
  position: absolute;
  right: 4px;
  bottom: 4px;
}
/*
ホバー時は枠線を太くする
「border」ではなく「outline」を使用することで、ホバー時にレイアウトがずれるのを防ぎます。
※詳細を知りたい方は、borderとoutlineの違いについて検索してみてください。
*/
#contact .link .item:hover {
  outline: solid 3px #121212;
}
#contact .link .item img {
  margin-bottom: 5px;
}

/*-------------------------------------------
フッター
-------------------------------------------*/
#footer {
  background-color: #121212;
  color: #fff;
  padding: 20px 0;
}
#footer .menu {
  display: flex;
  justify-content: center;
  margin: 30px 0 60px 0;
}
#footer .menu li {
  border-right: solid 1px #fff;
  font-size: 0.875rem;
  padding: 0 20px;
}
#footer .menu li:last-child {
  border-right: none;
}
#footer .menu li a {
  color: #fff;
}
#footer .copyright {
  font-size: 0.75rem;
  text-align: center;
}

/*-------------------------------------------
トップへ戻るボタン
-------------------------------------------*/
/*
右下に固定で配置
表示・非表示の切り替えはjQueryで行うため、詳細は「main.js」のコメントを参照
*/
#to-top {
  width: 50px;
  height: 50px;
  background-color: #121212;
  border: solid 1px #fff;
  border-radius: 50%;
  position: fixed;
  right: 25px;
  bottom: 25px;
}
/*
中の三角は疑似要素で作成
*/
#to-top::after {
  content: "";
  border-left: 7px solid transparent;
  border-right: 7px solid transparent;
  border-bottom: 7px solid #fff;
  position: relative;
  left: 17px;
  bottom: 3px;
}

/*-------------------------------------------
SP
-------------------------------------------*/
@media screen and (max-width: 960px) {
  .container {
    margin-left: 0;
  }
  .wrapper {
    padding: 60px 20px;
  }
  .site-title {
    width: 180px;
    margin-bottom: 0;
    position: relative;
    left: 18px;
    top: 10px;
  }
  .sec-title {
    font-size: 1.25rem;
    margin-bottom: 30px;
  }
  .sec-title::before,
  .sec-title::after {
    width: 18%;
  }

  /*-------------------------------------------
  ヘッダー
  -------------------------------------------*/
  #header {
    width: 100%;
    height: 72px;
    padding: 0;
    z-index: 10;
  }
  /*
  ハンバーガーメニュー
  ※ハンバーガーメニューの説明は他の課題と重複するため割愛
  */
  #navi {
    width: 300px;
    background: #fff;
    padding: 25px;
    position: fixed;
    top: 0;
    left: -300px;
    bottom: 0;
    opacity: 0;
    overflow-y: auto;
    transition: 0.5s;
    z-index: 20;
  }
  .open #navi {
    left: 0;
    opacity: 1;
  }
  #navi ul.nav-menu {
    margin-bottom: 30px;
  }
  #navi ul li {
    padding: 10px 0;
  }
  .hamburger {
    width: 30px;
    height: 30px;
    cursor: pointer;
    position: fixed;
    top: 22px;
    right: 18px;
    transition: 0.5s;
    z-index: 20;
  }
  .hamburger span {
    width: 30px;
    height: 2px;
    background-color: #121212;
    border-radius: 4px;
    display: block;
    position: absolute;
    left: 0;
    transition: 0.5s;
  }
  .hamburger span:nth-child(1) {
    top: 4px;
  }
  .hamburger span:nth-child(2) {
    top: 14px;
  }
  .hamburger span:nth-child(3) {
    bottom: 4px;
  }
  .open .hamburger span {
    background-color: #fff;
  }
  .open .hamburger span:nth-child(1) {
    transform: translateY(10px) rotate(-315deg);
  }
  .open .hamburger span:nth-child(2) {
    opacity: 0;
  }
  .open .hamburger span:nth-child(3) {
    transform: translateY(-10px) rotate(315deg);
  }
  #mask {
    display: none;
    transition: 0.5s;
  }
  .open #mask {
    width: 100%;
    height: 100%;
    background-color: #000;
    cursor: pointer;
    display: block;
    opacity: 0.8;
    position: fixed;
    top: 0;
    left: 0;
    z-index: 10;
  }

  /*-------------------------------------------
  Video
  -------------------------------------------*/
  /*
  スマホの場合は、動画が見切れすぎないよう高さを調整
  */
  #video {
    height: 80vh;
  }
  #video .bg-video {
    height: 520px;
    top: 72px;
    left: 0;
    right: 0;
    margin: 0 auto;
  }

  /*-------------------------------------------
  blog
  -------------------------------------------*/

  #blog .list {
    flex-direction: column;
  }
  #blog .list li {
    width: 100%;
    margin-bottom: 30px;
  }
  #blog .list li:nth-last-child(2) {
    margin-bottom: 30px;
  }

  /*-------------------------------------------
  work
  -------------------------------------------*/
  #work {
    padding-bottom: 60px;
  }

  /*-------------------------------------------
  Profile
  -------------------------------------------*/
  #profile {
    padding-top: 0;
  }
  #profile .step {
    flex-direction: column;
    align-items: center;
    margin-top: 30px;
  }
  #profile .figure {
    margin-bottom: 80px;
  }
  /*
  図形下の黄色い棒線を中央に配置
  */
  #profile .figure::before {
    left: 0;
    right: 0;
    margin: 0 auto;
  }
  /*
  図形（四角部分）の横幅を、画面幅から80pxマイナスしてサイズを調整
  ※80pxは任意の数値ですので、図形をもっと小さくして横の余白とりたい場合は、
  ここの数値を大きくする等して調整が可能です。
  */
  #profile .figure li {
    width: calc(100vw - 80px);
  }
  /*
  図形（三角部分）の横幅を設定
  ※上記同様、図形のサイズにあわせて調整を行う
  */
  #profile .figure li::before {
    border-left: calc(50vw - 40px) solid transparent;
    border-right: calc(50vw - 40px) solid transparent;
  }
  #profile .description {
    margin-left: 50px;
  }

  /*-------------------------------------------
  Contact
  -------------------------------------------*/
  #contact {
    padding-bottom: 60px;
  }
  #contact .link {
    flex-direction: column;
    align-items: center;
    margin-top: 30px;
  }
  #contact .link .item {
    width: 60%;
    margin: 20px 0 0 0;
  }
  #contact .link .item:first-child {
    margin-top: 0;
  }

  /*-------------------------------------------
  フッター
  -------------------------------------------*/
  #footer .menu {
    flex-wrap: wrap;
  }
  #footer .menu li {
    margin-bottom: 10px;
  }
}
